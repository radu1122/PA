#!/bin/bash

# Please don't change this.
MAX_POINTS=150

# TODO 1: Function check for task 1
test_poduri() {
	n_tests=10
	src_names=(poduri.c poduri.cpp Poduri.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '2.5 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=25

	run_problem poduri 1
}

# TODO 2: Function check for task 2
test_adrese() {
	n_tests=10
	src_names=(adrese.c adrese.cpp Adrese.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '4.5 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=45

	run_problem adrese 2
}

# TODO 3: Function check for task 3
test_lego() {
	n_tests=10
	src_names=(lego.c lego.cpp Lego.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '4.5 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=45

	run_problem lego 3
}

# TODO 4: Function check for task 4
test_retea() {
	n_tests=10
	src_names=(retea.c retea.cpp Retea.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '2.5 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=25

	run_problem retea 4
}

# TODO 5: Put your tasks in this function
test_homework() {
	if [[ "$1" = "1" || "$1" = "poduri" ]]; then
        test_poduri
	elif [[ "$1" = "2" || "$1" = "adrese" ]]; then
        test_adrese
	elif [[ "$1" = "3" || "$1" = "lego" ]]; then
        test_lego
	elif [[ "$1" = "4" || "$1" = "retea" ]]; then
		test_retea
	elif [[ "$1" = "cs" ]]; then
		echo "skip running tests"
	else
		test_poduri
		test_adrese
		test_lego
		test_retea
	fi
}

# TODO 6:Define bonus task
BONUS_TASK=retea

# Please don't change this.
source "$(dirname "{0}")"/_utils/base_check.sh
