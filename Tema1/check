#!/bin/bash

# Please don't change this.
MAX_POINTS=150

# TODO 1: Function check for task 1
test_crypto() {
	n_tests=25
	src_names=(crypto.c crypto.cpp Crypto.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=25

	run_problem crypto 1
}

# TODO 2: Function check for task 2
test_stocks() {
	n_tests=30
	src_names=(stocks.c stocks.cpp Stocks.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=30

	run_problem stocks 2
}

# TODO 3: Function check for task 3
test_valley() {
	n_tests=30
	src_names=(valley.c valley.cpp Valley.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=30

	run_problem valley 3
}

# TODO 4: Function check for task 4
test_ridge() {
	n_tests=30
	src_names=(ridge.c ridge.cpp Ridge.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=30

	run_problem ridge 4
}

test_trigigel() {
	n_tests=25
	src_names=(trigigel.c trigigel.cpp Trigigel.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=25

	run_problem trigigel 5
}

# TODO 5: Put your tasks in this function
test_homework() {
	if [[ "$1" = "1" || "$1" = "crypto" ]]; then
        test_crypto
	elif [[ "$1" = "2" || "$1" = "stocks" ]]; then
        test_stocks
	elif [[ "$1" = "3" || "$1" = "valley" ]]; then
        test_valley
	elif [[ "$1" = "4" || "$1" = "ridge" ]]; then
		test_ridge
    elif [[ "$1" = "5" || "$1" = "trigigel" ]]; then
        test_trigigel
	elif [[ "$1" = "cs" ]]; then
		echo "skip running tests"
	else
		test_crypto
		test_stocks
		test_valley
		test_ridge
		test_trigigel
	fi
}

# TODO 6:Define bonus task
BONUS_TASK=trigigel

# Please don't change this.
source "$(dirname "{0}")"/_utils/base_check.sh
